"""
This type stub file was generated by pyright.
"""

__copyright__ = ...
class BaseError(Exception):
    """
    base error structure class
    """
    def __init__(self, val, message) -> None:
        """
        @param val: actual value
        @param message: message shown to the user
        """
        ...
    
    def __str__(self) -> str:
        ...
    


class LanguageNotSupportedException(BaseError):
    """
    exception thrown if the user uses a language
    that is not supported by the deep_translator
    """
    def __init__(self, val, message=...) -> None:
        ...
    


class NotValidPayload(BaseError):
    """
    exception thrown if the user enters an invalid payload
    """
    def __init__(self, val, message=...) -> None:
        ...
    


class InvalidSourceOrTargetLanguage(BaseError):
    """
    exception thrown if the user enters an invalid payload
    """
    def __init__(self, val, message=...) -> None:
        ...
    


class TranslationNotFound(BaseError):
    """
    exception thrown if no translation was found for the text provided by the user
    """
    def __init__(self, val, message=...) -> None:
        ...
    


class ElementNotFoundInGetRequest(BaseError):
    """
    exception thrown if the html element was not found in the body parsed by beautifulsoup
    """
    def __init__(self, val, message=...) -> None:
        ...
    


class NotValidLength(BaseError):
    """
    exception thrown if the provided text exceed the length limit of the translator
    """
    def __init__(self, val, min_chars, max_chars) -> None:
        ...
    


class RequestError(Exception):
    """
    exception thrown if an error occurred during the request call, e.g a connection problem.
    """
    def __init__(self, message=...) -> None:
        ...
    
    def __str__(self) -> str:
        ...
    


class MicrosoftAPIerror(Exception):
    """
    exception thrown if Microsoft API returns one of its errors
    """
    def __init__(self, api_message) -> None:
        ...
    
    def __str__(self) -> str:
        ...
    


class TooManyRequests(Exception):
    """
    exception thrown if an error occurred during the request call, e.g a connection problem.
    """
    def __init__(self, message=...) -> None:
        ...
    
    def __str__(self) -> str:
        ...
    


class ServerException(Exception):
    """
    Default YandexTranslate exception from the official website
    """
    errors = ...
    def __init__(self, status_code, *args) -> None:
        ...
    


class ApiKeyException(BaseError):
    """
    exception thrown if no ApiKey was provided
    """
    def __init__(self, env_var) -> None:
        ...
    


class AuthorizationException(Exception):
    def __init__(self, api_key, *args) -> None:
        ...
    


class BaiduAPIerror(Exception):
    """
    exception thrown if Baidu API returns one of its errors
    """
    def __init__(self, api_message) -> None:
        ...
    
    def __str__(self) -> str:
        ...
    


